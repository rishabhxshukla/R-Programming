Profit == (SELECT max(Profit) FROM data)")
print(b)
sqldf("SELECT Region, Profit FROM data WHERE
Profit == (SELECT min(Profit) FROM data)")
sqldf("SELECT City FROM data WHERE
Profit == (SELECT max(Profit) FROM data)")
#Taking inputs :
name <- readline(prompt = "Enter your name : ")
age <- readline(prompt = "Enter your age : ")
#Printing :
print(name)
print(age)
library(ggplot2)
data(iris)
View(iris)
#Single input :
ggplot(iris, aes(Petal.Length, col = Species)) +
labs(x = "X axis", y = "Y axis", title = "Title") +
geom_bar()
#Double input :
ggplot(iris, aes(Species, Petal.Length, col = Species)) +
labs(x = "X axis", y = "Y axis", title = "Title") +
geom_bar(stat = "identity")
#HISTOGRAM CHART :
ggplot(iris, aes(Petal.Length, col = Species)) +
labs(x = "X axis", y = "Y axis", title = "Title") +
geom_histogram()
#POINT CHART :
ggplot(iris, aes(Sepal.Length, Petal.Length, col = Species)) +
labs(x = "X axis", y = "Y axis", title = "Title") +
geom_point()
#LINE CHART :
ggplot(iris, aes(Sepal.Length, Petal.Length, col = Species)) +
labs(x = "X axis", y = "Y axis", title = "Title") +
geom_point() +
geom_line()
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
sum <- sum + ((i^4)/(3+j))
print(paste(sum, i, j))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
sum <- sum + ((i^4)/(3+j))
print(paste(sum, paste0(i, j)))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
sum <- sum + ((i^4)/(3+j))
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
sum <- sum + ((i^4)/(3+j))
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
sum <- sum + ((i^4)/(3+j))
round(sum, digits = 2)
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
sum <- sum + ((i^4)/(3+j))
sum <- round(sum, digits = 2)
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
sum <- sum + ((i^4)/(3+j))
sum <- round(sum, digits = 2)
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
sum <- sum + ((i^4)/(3+j))
#sum <- round(sum, digits = 2)
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
#sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
?df()
?data.frame()
sum = 0
df <- data.frame()
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
df <- sum
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(df)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
#Final sum
print(sum)
cat(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
cat(paste(sum, paste(i, j, sep = ",")))
}
}
#Final sum
print(sum)
#We can also use cat() to remove ""
cat(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
#Final sum
print(sum)
#We can also use cat() to remove ""
cat(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
cat(paste(sum, paste(i, j, sep = ",")))
#print(paste(sum, paste(i, j, sep = ",")))
}
}
#Final sum
print(sum)
#We can also use cat() to remove ""
cat(sum)
?cat()
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
cat(paste(sum, paste(i, j, sep = ",")), sep = "\n")
#?cat()
#print(paste(sum, paste(i, j, sep = ",")))
}
}
#Final sum
print(sum)
#We can also use cat() to remove ""
cat(sum)
#Printing sum,id
#print(paste(sum, paste(i, j, sep = ",")))
cat(paste(sum, paste(i, j, sep = ",")), sep = "\n")
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
#print(paste(sum, paste(i, j, sep = ",")))
cat(paste(sum, paste(i, j, sep = ",")), sep = "\n")
}
}
#Final sum
print(sum)
#We can also use cat() to remove ""
#cat(paste(sum, paste(i, j, sep = ",")), sep = "\n")
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
#Final sum
print(sum)
#We can also use cat() to remove ""
#cat(paste(sum, paste(i, j, sep = ",")), sep = "\n")
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
#Final sum
print(sum)
#We can also use cat() to remove ""
#cat(paste(sum, paste(i, j, sep = ",")), sep = "\n")
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
#sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
#Final sum
print(sum)
#We can also use cat() to remove ""
#cat(paste(sum, paste(i, j, sep = ",")), sep = "\n")
#Data
data = c("East", "West", "East", "North", "North", "East", "West", "West", "West", "East", "North")
#Checking if it is a factor
is.factor(data)
#Factoring the raw data
factoredData <- factor(data)
#No. of categories
nlevels(factoredData)
#Printing factored data
print(factoredData)
#Checking if it is a factor
is.factor(factoredData)
#Creating a custom order
NewOrder <- factor(factoredData, levels = c("North", "East", "West"))
#install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
#install.packages("dplyr")
library(dplyr)
#Installing fights dataset :
install.packages("nycflights13")
#Installing fights dataset :
#install.packages("nycflights13")
library(nycflights13)
#Viewing full data
View(flights)
#Viewing first 6 rows
head(flights)
#install.packages("dplyr")
library(dplyr)
#Installing fights dataset :
#install.packages("nycflights13")
library(nycflights13)
#Viewing full data
View(flights)
#Viewing first 6 rows
head(flights)
#select()
ans <- select(flights, flight, origin, dest)
View(ans)
#slice()
slice(flights, 3)
slice(flights, 1:5)
slice(flights, 5:20)
#distinct()
ans <- distinct(flights, origin)
View(ans)
#filter()
ans <- filter(flights, month == 7)
View(ans)
ans <- filter(flights, month == 7, day == 3)
View(ans)
summary(s1)
s1 <- read.csv(file.choose(),stringsAsFactors = TRUE)
summary(s1)
sd(s1$Order.Quantity)
sd(s1$Sales)
sd(s1$Profit)
sd(s1$Unit.Price)
sd(s1$Shipping.Cost)
#Draw a box plot for each numeric variable
bar(nfrow = c(1, 2))
boxplot(s1$Order.Quantity, main="Order Quantity")
boxplot(s1$Profit, main="Profit")
boxplot(s1$Sales, main="Sales")
boxplot(s1$Shipping.Cost, main="Shipping Cost")
boxplot(s1$Unit.Price, main="Unit Price")
par(nfrow = c(1, 1))
barplot(summary(s1$Order.Priority))
#since missing values in s) have been replaced with the mean and max of each variable
#in part , we need to import the dataset again to restore the missing values.
View(s0)
#since missing values in s) have been replaced with the mean and max of each variable
#in part , we need to import the dataset again to restore the missing values.
s0 <- read.csv(file.choose(),stringsAsFactors = TRUE)
View(s0)
summary(s0)
s0$Sales[is.na(s0$Sales)] <- runif(n = sum(is.na(s0$Sales)),
min = min(s0$Sales, na.rm = TRUE),
max = max(s0$Sales, na.rm = TRUE))
s0$Profit[is.na(s0$Profit)] <- runif(n = sum(is.na(s0$Profit)),
min = min(s0$Profit, na.rm = TRUE),
max = max(s0$Profit, na.rm = TRUE))
s0$Unit.Price[is.na(s0$Unit.Price)] <- runif(n = sum(is.na(s0$Unit.Price)),
min = min(s0$Unit.Price, na.rm = TRUE),
max = max(s0$Unit.Price, na.rm = TRUE))
summary(s0)
s0$Order.Priority[is.na(s0$Order.Priority)] <- sample(levels(s0$Order.Priority),
size = sum(is.na(s0$Order.Priority)),
replace = TRUE)
s0$Ship.Mode[is.na(s0$Ship.Mode)] <- sample(levels(s0$Ship.Mode),
size = sum(is.na(s0$Ship.Mode)),
replace = TRUE)
s0$Customer.Name[is.na(s0$Customer.Name)] <- sample(levels(s0$Customer.Name),
size = sum(is.na(s0$Customer.Name)),
replace = TRUE)
summary(s0)
s1 <- read.csv(file.choose(),stringsAsFactors = TRUE)
s1 <- s0
summary(s1)
sd(s1$Order.Quantity)
sd(s1$Sales)
sd(s1$Profit)
sd(s1$Unit.Price)
sd(s1$Shipping.Cost)
#Draw a box plot for each numeric variable
bar(nfrow = c(1, 2))
boxplot(s1$Order.Quantity, main="Order Quantity")
boxplot(s1$Profit, main="Profit")
boxplot(s1$Sales, main="Sales")
boxplot(s1$Shipping.Cost, main="Shipping Cost")
boxplot(s1$Unit.Price, main="Unit Price")
par(nfrow = c(1, 1))
barplot(summary(s1$Order.Priority))
#since missing values in s) have been replaced with the mean and max of each variable
#in part , we need to import the dataset again to restore the missing values.
s0 <- read.csv(file.choose(),stringsAsFactors = TRUE)
#since missing values in s) have been replaced with the mean and max of each variable
#in part , we need to import the dataset again to restore the missing values.
s0 <- read.csv(file.choose(),stringsAsFactors = TRUE)
View(s0)
summary(s0)
s0$Sales[is.na(s0$Sales)] <- runif(n = sum(is.na(s0$Sales)),
min = min(s0$Sales, na.rm = TRUE),
max = max(s0$Sales, na.rm = TRUE))
s0$Profit[is.na(s0$Profit)] <- runif(n = sum(is.na(s0$Profit)),
min = min(s0$Profit, na.rm = TRUE),
max = max(s0$Profit, na.rm = TRUE))
s0$Unit.Price[is.na(s0$Unit.Price)] <- runif(n = sum(is.na(s0$Unit.Price)),
min = min(s0$Unit.Price, na.rm = TRUE),
max = max(s0$Unit.Price, na.rm = TRUE))
summary(s0)
s0$Order.Priority[is.na(s0$Order.Priority)] <- sample(levels(s0$Order.Priority),
size = sum(is.na(s0$Order.Priority)),
replace = TRUE)
s0$Ship.Mode[is.na(s0$Ship.Mode)] <- sample(levels(s0$Ship.Mode),
size = sum(is.na(s0$Ship.Mode)),
replace = TRUE)
s0$Customer.Name[is.na(s0$Customer.Name)] <- sample(levels(s0$Customer.Name),
size = sum(is.na(s0$Customer.Name)),
replace = TRUE)
summary(s0)
s1 <- s0
summary(s1)
sd(s1$Order.Quantity)
sd(s1$Sales)
sd(s1$Profit)
sd(s1$Unit.Price)
sd(s1$Shipping.Cost)
#Draw a box plot for each numeric variable
bar(nfrow = c(1, 2))
boxplot(s1$Order.Quantity, main="Order Quantity")
#Draw a box plot for each numeric variable
bar(nfrow = c(1, 2))
boxplot(s1$Order.Quantity, main="Order Quantity")
boxplot(s1$Profit, main="Profit")
boxplot(s1$Sales, main="Sales")
