type = "o"
)
x <- c(1, 2, 3, 4, 5)
y <- c(10, 11, 12, 13, 14)
plot(
x,
main = "Title",
xlab = "x axis",
ylab = "yaxis",
col = "red",
type = "o"
)
lines(
y,
col = "blue",
type = "o"
)
#Use "mtcars" datatset. Answer the following questions;
#a) Write a program to analyze the difference between
#average fuel efficiency of cars based on their transmission type (automatic vs manual)?
#b) Finally, create a visualization to display this information using boxplot?
data(mtcars)
# Automatic vs. manual
t.test(mpg ~ am, data = mtcars)
ggplot(mtcars, aes(x = factor(am), y = mpg)) +
geom_boxplot()
#Use "mtcars" datatset. Answer the following questions;
#a) Write a program to analyze the difference between
#average fuel efficiency of cars based on their transmission type (automatic vs manual)?
#b) Finally, create a visualization to display this information using boxplot?
library(ggplot2)
data(mtcars)
# Automatic vs. manual
t.test(mpg ~ am, data = mtcars)
ggplot(mtcars, aes(x = factor(am), y = mpg)) +
geom_boxplot()
data(mtcars)
library(ggplot2)
ggplot(mtcars, aes(x = hp, y = mpg)) +
geom_point()
ggplot(mtcars, aes(x = hp, y = mpg)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
ggplot(mtcars, aes(x = hp, y = mpg)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(mtcars, aes(x = hp, y = mpg)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(mtcars, aes(x = hp, y = mpg)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
install.packages("sqldf")
install.packages("readxl")
#install.packages("sqldf")
library("sqldf")
#Loading the CSV file by opening a window
students = read.csv(file.choose(), header = TRUE)
#install.packages("sqldf")
library("sqldf")
#Loading the CSV file by opening a window
students = read.csv(file.choose(), header = TRUE)
#Commands :
sqldf("SELECT min(marks) FROM students")
sqldf("SELECT count(*) FROM students")
sqldf("SELECT * FROM students WHERE roll_no > 3")
sqldf("SELECT * FROM students WHERE marks < 24")
sqldf("SELECT * FROM students WHERE name = 'A'")
sqldf("SELECT DISTINCT name FROM students")
sqldf("SELECT name, marks FROM students WHERE marks > 33")
sqldf("SELECT name FROM students WHERE marks < 64")
min(students$marks)
max(students$marks)
sum(students$marks)
nrow(students)
ncol(students)
nrow(students[students$marks>24 ,])
nrow(students[students$marks>57 ,])
#install.packages("readxl")
library("readxl")
library("sqldf")
#Loading the excel file
data = read_excel("D:/PROGRAMMING/R/data2.xls")
#Commands :
sqldf("SELECT * FROM data LIMIT 10")
sqldf("SELECT Profit AS 'P', Quantity FROM data LIMIT 10")
sqldf("SELECT Discount, Quantity, Region FROM data WHERE Region=='Central' LIMIT 20")
#Sorting :
sqldf("SELECT * FROM data ORDER BY City DESC LIMIT 5")
sqldf("SELECT City, Profit, State FROM data ORDER BY City DESC, State LIMIT 20")
sqldf("SELECT City, State, Profit FROM data ORDER BY City DESC, State LIMIT 20")
#Like :
sqldf("SELECT City, Profit FROM data WHERE City LIKE 'H%' LIMIT 5")
sqldf("SELECT City, Profit FROM data WHERE City LIKE 'He%' LIMIT 5")
sqldf("SELECT City, Profit FROM data WHERE City LIKE '%H%' LIMIT 5")
sqldf("SELECT City, Profit FROM data WHERE City LIKE '_H%' LIMIT 5")
#Aggregate functions :
sqldf("SELECT sum(Profit) as 'Total Profit' FROM data")
sqldf("SELECT max(Profit) as 'Max Profit' FROM data")
sqldf("SELECT min(Profit) as 'Min Profit' FROM data")
sqldf("SELECT count(Profit) as 'Count Profit' FROM data")
#Nested select :
a <<- sqldf("SELECT max(Profit) FROM data")
print(a)
b = sqldf("SELECT Region, Profit FROM data WHERE
Profit == (SELECT max(Profit) FROM data)")
print(b)
sqldf("SELECT Region, Profit FROM data WHERE
Profit == (SELECT min(Profit) FROM data)")
sqldf("SELECT City FROM data WHERE
Profit == (SELECT max(Profit) FROM data)")
#Taking inputs :
name <- readline(prompt = "Enter your name : ")
age <- readline(prompt = "Enter your age : ")
#Printing :
print(name)
print(age)
library(ggplot2)
data(iris)
View(iris)
#Single input :
ggplot(iris, aes(Petal.Length, col = Species)) +
labs(x = "X axis", y = "Y axis", title = "Title") +
geom_bar()
#Double input :
ggplot(iris, aes(Species, Petal.Length, col = Species)) +
labs(x = "X axis", y = "Y axis", title = "Title") +
geom_bar(stat = "identity")
#HISTOGRAM CHART :
ggplot(iris, aes(Petal.Length, col = Species)) +
labs(x = "X axis", y = "Y axis", title = "Title") +
geom_histogram()
#POINT CHART :
ggplot(iris, aes(Sepal.Length, Petal.Length, col = Species)) +
labs(x = "X axis", y = "Y axis", title = "Title") +
geom_point()
#LINE CHART :
ggplot(iris, aes(Sepal.Length, Petal.Length, col = Species)) +
labs(x = "X axis", y = "Y axis", title = "Title") +
geom_point() +
geom_line()
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
sum <- sum + ((i^4)/(3+j))
print(paste(sum, i, j))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
sum <- sum + ((i^4)/(3+j))
print(paste(sum, paste0(i, j)))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
sum <- sum + ((i^4)/(3+j))
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
sum <- sum + ((i^4)/(3+j))
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
sum <- sum + ((i^4)/(3+j))
round(sum, digits = 2)
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
sum <- sum + ((i^4)/(3+j))
sum <- round(sum, digits = 2)
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
sum <- sum + ((i^4)/(3+j))
sum <- round(sum, digits = 2)
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
sum <- sum + ((i^4)/(3+j))
#sum <- round(sum, digits = 2)
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
#sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
?df()
?data.frame()
sum = 0
df <- data.frame()
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
df <- sum
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(df)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
print(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
#Final sum
print(sum)
cat(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
cat(paste(sum, paste(i, j, sep = ",")))
}
}
#Final sum
print(sum)
#We can also use cat() to remove ""
cat(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
#Final sum
print(sum)
#We can also use cat() to remove ""
cat(sum)
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
cat(paste(sum, paste(i, j, sep = ",")))
#print(paste(sum, paste(i, j, sep = ",")))
}
}
#Final sum
print(sum)
#We can also use cat() to remove ""
cat(sum)
?cat()
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
cat(paste(sum, paste(i, j, sep = ",")), sep = "\n")
#?cat()
#print(paste(sum, paste(i, j, sep = ",")))
}
}
#Final sum
print(sum)
#We can also use cat() to remove ""
cat(sum)
#Printing sum,id
#print(paste(sum, paste(i, j, sep = ",")))
cat(paste(sum, paste(i, j, sep = ",")), sep = "\n")
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
#print(paste(sum, paste(i, j, sep = ",")))
cat(paste(sum, paste(i, j, sep = ",")), sep = "\n")
}
}
#Final sum
print(sum)
#We can also use cat() to remove ""
#cat(paste(sum, paste(i, j, sep = ",")), sep = "\n")
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
#Final sum
print(sum)
#We can also use cat() to remove ""
#cat(paste(sum, paste(i, j, sep = ",")), sep = "\n")
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
#Final sum
print(sum)
#We can also use cat() to remove ""
#cat(paste(sum, paste(i, j, sep = ",")), sep = "\n")
sum = 0
for(i in 1 : 20)
{
for(j in 1 : 5)
{
#Calculating sum
sum <- sum + ((i^4)/(3+j))
#Rounding sum
#sum <- round(sum, digits = 2)
#Printing sum,id
print(paste(sum, paste(i, j, sep = ",")))
}
}
#Final sum
print(sum)
#We can also use cat() to remove ""
#cat(paste(sum, paste(i, j, sep = ",")), sep = "\n")
#Data
data = c("East", "West", "East", "North", "North", "East", "West", "West", "West", "East", "North")
#Checking if it is a factor
is.factor(data)
#Factoring the raw data
factoredData <- factor(data)
#No. of categories
nlevels(factoredData)
#Printing factored data
print(factoredData)
#Checking if it is a factor
is.factor(factoredData)
#Creating a custom order
NewOrder <- factor(factoredData, levels = c("North", "East", "West"))
#install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
#install.packages("dplyr")
library(dplyr)
#Installing fights dataset :
install.packages("nycflights13")
#Installing fights dataset :
#install.packages("nycflights13")
library(nycflights13)
#Viewing full data
View(flights)
#Viewing first 6 rows
head(flights)
#install.packages("dplyr")
library(dplyr)
#Installing fights dataset :
#install.packages("nycflights13")
library(nycflights13)
#Viewing full data
View(flights)
#Viewing first 6 rows
head(flights)
#select()
ans <- select(flights, flight, origin, dest)
View(ans)
#slice()
slice(flights, 3)
slice(flights, 1:5)
slice(flights, 5:20)
#distinct()
ans <- distinct(flights, origin)
View(ans)
#filter()
ans <- filter(flights, month == 7)
View(ans)
ans <- filter(flights, month == 7, day == 3)
View(ans)
